name: ci

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-runner-set
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          python3 -c 'import glob, json; files=glob.glob("Dockerfile.*"); images=list(map(lambda f: {"file":f, "arch":f[11:]}, files)); print("matrix="+json.dumps({"image": images}))' >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  builds:
    name: Build rust-cross:${{ matrix.image.arch }}
    needs: prepare
    runs-on: ubuntu-runner-set
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/zettascalelabs/rust-cross
          # generate Docker tags based on the following events/attributes
          tags: |
            ${{ matrix.image.arch }}

      - name: Login to DockerHub
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build rust-cross:${{ matrix.image.arch }} from ${{ matrix.dockerfile }}
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          platforms: linux/amd64
          push: true
          file: ${{ matrix.image.file }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


